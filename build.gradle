buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bluepapa32:gradle-watch-plugin:0.1.5'
    }
}   
plugins {
  id 'org.hidetake.ssh' version '1.1.3'
}


apply plugin: 'com.bluepapa32.watch'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile 'junit:junit:4.12'
 
    compile 'org.springframework.batch:spring-batch-core:3.0.5.RELEASE'
    compile 'log4j:log4j:1.2.17'
    compile 'org.datanucleus:datanucleus-api-jdo:4.2.0-m3'

}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task copyLib(type: Copy) {
	from configurations.runtime
	into "$buildDir/libs"
	
	from "lib"
	into "$buildDir/libs"
}

task copySrc(type: Copy) {
	from "src/main/script" 
	fileMode 0755
	into "$buildDir/script"
}

task pipInstall(type: Exec) {
  commandLine 'pip', 'install', '-r', 'requirements.txt', '-d', "$buildDir/libs"
}


task zip(type:Zip) {
	from("$buildDir/libs") {
		into 'lib'
	}
	from("$buildDir/script") {
		into 'script'
	}
	from("$buildDir/resources") {
		into 'resources'
	}
	into project.name
	destinationDir file('dist')
}



build.dependsOn(copyLib)
build.dependsOn(copySrc)
build.dependsOn(pipInstall)

zip.dependsOn(build)



remotes {
  mapr {
    role 'cluster'
    host = hsb_host //'192.168.192.128'
    user = hsb_username //'mapr'
    password = hsb_password //'mapr'
  }
}

task deploy << {
  ssh.run {
    session(remotes.role('cluster')) {
		put from: 'dist/HadoopSpringBatch-1.0.zip', into: 'HadoopSpringBatch-1.0.zip'
		execute 'unzip -o HadoopSpringBatch-1.0.zip'
    }
  }
}
deploy.dependsOn(zip)

task sync(type:Exec) {
  commandLine 'sh', '-c', "sshpass -e rsync -ruh --progress --exclude=.DS_Store src/main/* ${hsb_username}@${hsb_host}:${hsb_dest}"
}

watch {
  scripts {
    files files('src/main')
    tasks 'sync'
  }
}
